---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
---

<head>
	<meta charset="utf-8" />
	<!-- CSS de Leaflet -->
	<link
		rel="stylesheet"
		href="https://unpkg.com/leaflet/dist/leaflet.css"
	/>
	<!-- JS de Leaflet -->
	<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>

<Layout title="Locales Cercanos - VerLaCarta">
	<main>
		<h1>Locales Cercanos</h1>
		<!-- Aquí iría tu mapa y el contenido relacionado -->
		<div
			id="map"
			class="map-container"
			style="height: 500px;">
		</div>

		<ul
			role="list"
			class="link-card-grid">
			<Card
				href="../"
				title="Ir a la página principal"
				body="Volver a VerLaCarta"
			/>
		</ul>

		<script>
			import L from 'leaflet';
			import type { restaurante } from '../utils/CustomTypes';

			document.addEventListener('DOMContentLoaded', async function () {
				// Coordenadas de Ciudad Universitaria
				const ciudadUniversitariaCoords = [-34.541895, -58.437618] as L.LatLngExpression,
					map = L.map('map').setView(ciudadUniversitariaCoords, 15);

				// Cargar el mapa base desde OpenStreetMap
				L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
					attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
				}).addTo(map);

				// Marcar la ubicación de Ciudad Universitaria
				L.marker(ciudadUniversitariaCoords).addTo(map).bindPopup('<h3>Ciudad Universitaria</h3><p>Buenos Aires</p>').openPopup();

				// Simular algunos locales cercanos con descripciones detalladas
				const localesResponse = await fetch('http://localhost:5000/restaurante'),
					localesData = (await localesResponse.json()) as restaurante[];

				console.log(localesData);
				// Agregar marcadores de locales cercanos con descripciones detalladas
				localesData.forEach((local: restaurante) => {
					const coords = [parseFloat(local.lat.replace(',', '.')), parseFloat(local.len.replace(',', '.'))] as L.LatLngExpression,
						marker = L.marker(coords).addTo(map);

					// Bind popup con descripción
					marker.bindPopup(`<a href="../local?id=${local.id}">${local.name}</a><p>${local.description}</p>`);

					// Abrir el popup al hacer clic en el marcador
					marker.on('click', () => {
						marker.openPopup();
					});

					// Console log para verificar que se añaden los marcadores
					console.log(`Marcador agregado: ${local.name} en ${coords}`);
				});
			});
		</script>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.map-container {
		height: 500px; /* Mantener la altura que ya tenías */
		border-radius: 15px; /* Bordes redondeados */
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2); /* Sombra */
		overflow: hidden; /* Para que los bordes redondeados funcionen correctamente */
	}
</style>

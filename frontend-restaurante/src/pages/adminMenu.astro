---
// Importar el componente Card si es necesario
import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import '../styles/global.css';
import type { itemMenu } from '../utils/CustomTypes';

const urlParams = new URLSearchParams(Astro.url.search);
const localId = urlParams.get('id'); // Obtener el ID del restaurante desde la URL

let menuData = [],
    restauranteData = [];

if (localId) {
    const response = await fetch(`http://localhost:5001/restaurantes/${localId}/menu`), // TODO: /restaurante/id/menu ???
        responseRestaurante = await fetch(`http://localhost:5001/restaurantes?id=${localId}`);  // Did I break anything by changing this endpoint?
    restauranteData = await responseRestaurante.json();
    menuData = await response.json();
}
---

<Layout title="Administrar menú">
    <main>
        <h1>Administrar el <span class="text-gradient">menú</span></h1>
        <div id="platos-container" class="platos-container"></div>
        {
            localId ? (
                <>
                    {menuData.length > 0 ? (
                        <ul>
                            {menuData.map((item: itemMenu) => (
                                <li id={`item-${item.id}`}>
                                    <h3>{item.name}</h3>
                                    <p>{item.description}</p>
                                    <p>
                                        <strong>Precio:</strong> ${item.price}
                                    </p>
                                    <button class="edit-btn" id={`edit-${item.id}`}>
                                        Editar
                                    </button>
                                    <button class="delete-btn">Eliminar</button>
                                </li>
                            ))}
                        </ul>
                    ) : (
                        <p>No hay elementos en el menú.</p>
                    )}
                </>
            ) : (
                <p>No se ha proporcionado un ID de restaurante válido.</p>
            )
        }
        <button type="button" id="addPlatoBtn">Agregar otro plato</button>

        <!-- Modal -->
        <div id="myModal" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <h2>Editar Item</h2>
                <form id="editForm">
                    <label for="itemName">Nombre:</label>
                    <input type="text" id="itemName" name="itemName" />
                    <label for="itemDescription">Descripción:</label>
                    <input type="text" id="itemDescription" name="itemDescription" />
                    <label for="itemPrice">Precio:</label>
                    <input type="text" id="itemPrice" name="itemPrice" />
                    <button type="submit">Guardar</button>
                </form>
            </div>
        </div>
    </main>
</Layout>

<script lang="ts">
    const menuData = JSON.stringify(menuData); // Convierte a JSON para usarlo en el script

    document.querySelectorAll('.edit-btn').forEach((button) => {
        button.onclick = function () {
            const id = this.id.split('-')[1]; // Extraer el id del botón
            handleEditClick(id); // Llamar a la función con el id
        };
    });

    function handleEditClick(id) {
        // Aquí puedes buscar el item usando el id
        console.log(menuData);
        const item = menuData.find((item) => item.id === id); // Asegúrate de que 'menuData' esté disponible

        // Llenar el formulario del modal con la información del item
        document.getElementById('itemName').value = item.name;
        document.getElementById('itemDescription').value = item.description;
        document.getElementById('itemPrice').value = item.price;

        // Mostrar el modal
        document.getElementById('myModal').style.display = 'block';
    }

    function closeModal() {
        document.getElementById('myModal').style.display = 'none';
    }

    // También puedes cerrar el modal haciendo clic fuera del contenido
    window.onclick = function (event) {
        const modal = document.getElementById('editModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    };
</script>

<style>
    ul {
        list-style: none;
        padding: 0;
    }
    li {
        margin-bottom: 1.5em;
        background: rgba(255, 255, 255, 0.1);
        padding: 1em;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    }
    .modal {
        display: none; /* Ocultar por defecto */
        position: fixed; /* Mantenerlo en el mismo lugar */
        z-index: 1; /* Asegurarse de que esté en la parte superior */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Habilitar desplazamiento si es necesario */
        background-color: rgb(0, 0, 0); /* Color de fondo negro */
        background-color: rgba(0, 0, 0, 0.4); /* Negro con opacidad */
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% desde la parte superior y centrado */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Ancho del modal */
    }
</style>
